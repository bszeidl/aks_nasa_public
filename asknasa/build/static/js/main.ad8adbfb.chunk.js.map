{"version":3,"sources":["component/input/input.js","component/home/home.js","App.js","reportWebVitals.js","index.js"],"names":["Input","props","image","src","url","alt","title","className","width","height","Home","useState","error","setError","isLoaded","setIsLoaded","items","setItems","inputDate","setInputDate","useEffect","fetch","then","response","json","result","console","log","message","type","onInput","e","target","value","media_type","explanation","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAkBeA,EAhBD,SAACC,GAEd,MAAoB,UAAhBA,EAAMC,MAET,qBAAKC,IAAKF,EAAMG,IAAKC,IAAKJ,EAAMK,QAK/B,wBAAQC,UAAU,QAAQC,MAAO,IAAKC,OAAQ,IAAKN,IAAKF,EAAMG,IAAKE,MAAOL,EAAMK,SC4CpEI,MAnDf,WAAiB,IAAD,EAEYC,mBAAS,MAFrB,mBAEPC,EAFO,KAEAC,EAFA,OAGkBF,oBAAS,GAH3B,mBAGPG,EAHO,KAGGC,EAHH,OAIYJ,mBAAS,IAJrB,mBAIPK,EAJO,KAIAC,EAJA,OAKoBN,mBAAS,wFAL7B,mBAKPO,EALO,KAKIC,EALJ,KA8Bd,OAtBAC,qBAAU,WACRC,MAAMH,GACHI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MACC,SAACG,GACCV,GAAY,GACZE,EAASQ,MAEX,SAACb,GACCG,GAAY,GACZF,EAASD,QAGd,CAACM,IAOJQ,QAAQC,IAAIT,GAERN,EACK,0CAAaA,EAAMgB,WAChBd,EAMR,sBAAKP,UAAU,eAAf,UACE,6BAAKS,EAAMV,QACX,uBAAOuB,KAAK,OAAOC,QAhBN,SAACC,GAClBZ,EAAa,6FAAD,OAA8FY,EAAEC,OAAOC,WAgB/G,sBAAK1B,UAAU,qBAAf,UACE,cAAC,EAAD,CAAOD,MAAOU,EAAMV,MAAOF,IAAKY,EAAMZ,IAAKF,MAAOc,EAAMkB,aACxD,4BAAIlB,EAAMmB,oBAVT,8CCxBIC,EAVH,WAEX,OACC,qBAAK7B,UAAU,MAAf,SACC,cAAC,EAAD,OCKY8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ad8adbfb.chunk.js","sourcesContent":["import './input.css';\r\n\r\nconst Input = (props) => {\r\n\r\n\tif (props.image === 'image') {\r\n\t\treturn (\t\r\n\t\t<img src={props.url} alt={props.title} />\r\n\t\t\r\n\t\t);\r\n\t} else {\t\r\n\t\treturn (\r\n\t\t\t<iframe className='video' width={961} height={721} src={props.url} title={props.title}></iframe>\r\n\t\t)\r\n\t\t\r\n\t} \r\n\r\n}\r\n\r\nexport default Input;\r\n/*<iframe className='video' width={961} height={721} src={props.url} title={props.title}></iframe>*/","import './home.css';\nimport React, { useState, useEffect } from 'react';\nimport Input from '../input/input';\n\nfunction Home() {\n  \n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const [inputDate, setInputDate] = useState(\"https://api.nasa.gov/planetary/apod?api_key=OWN7eFiECp6rBfvTqLLzCRaMmatwj1uWPhI59fmK\");\n\n  \n  useEffect(() => {\n    fetch(inputDate)\n      .then(response => response.json()) \n      .then(\n        (result) => {\n          setIsLoaded(true); /*true értéket az isLoaded változónak*/\n          setItems(result); /*beállítja az items értékét */\n        },\n        (error) => {                  \n          setIsLoaded(true);\n          setError(error);\n        }\n      )\n  }, [inputDate])\n\n\n  const datePicker = (e) => {\n    setInputDate(`https://api.nasa.gov/planetary/apod?api_key=OWN7eFiECp6rBfvTqLLzCRaMmatwj1uWPhI59fmK&date=${e.target.value}`); /*g az összes előfordulást, i case insensitive*/\n    \n  }\n  console.log(inputDate);\n  \n  if (error) {\n    return <div>Error: {error.message}</div>; /*ha error van visszatér error üzenettel*/\n  } else if (!isLoaded) {\n    return <div>Loading...</div>; /*vagy visszatér loading üzenettel*/\n  } else {\n\n\n    return (\n      <div className='home-wrapper'>\n        <h1>{items.title}</h1>\n        <input type=\"date\" onInput={datePicker}></input>\n        <div className='image-text-wrapper'>\n          <Input title={items.title} url={items.url} image={items.media_type} />\n          <p>{items.explanation}</p>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default Home;\n","import './App.css';\r\nimport Home from './component/home/home';\r\n\r\nconst App = () => {\r\n\r\n\treturn (\r\n\t\t<div className='App'>\r\n\t\t\t<Home />\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}